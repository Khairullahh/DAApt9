# -*- coding: utf-8 -*-
"""DAA pt 9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1suhD5u_FN20x2wMlEKu30J2F9Ft6PnAF

Algoritma Pagerank

Implementasi algoritma pagerank
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,5)

connections = [(1,3),(2,1),(2,3),(3,1),(3,2),(3,4),(4,5),(5,1),(5,4)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.shell_layout(myWeb)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()

"""Implementasi algoritma pagerank"""

def createPageRank(aGraph):
    nodes_set = len(aGraph)
    M = nx.to_numpy_matrix(aGraph)
    outwards = np.squeeze(np.asarray(np.sum(M, axis=1)))
    prob_outwards = np.array(
        [1.0/count
         if count>0 else 0.0 for count in outwards])
    G = np.asarray(np.multiply(M.T, prob_outwards))
    p = np.ones(nodes_set)/float(nodes_set)
    if np.min(np.sum(G,axis=0)) < 1.0:
        print('WARN: G is substochastic')
    return G,p

G, p = createPageRank(myWeb)
print (G)

"""Tugas"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,6)

connections = [(1,2),(2,3),(3,4),(4,5),(5,6)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb, seed=40)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,5)

connections = [(1,2),(2,3),(3,4),(4,5),(5,1)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,4)

connections = [(1,2),(2,1),(2,3),(3,2),(3,4),(4,3)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,6)

connections = [(1,2),(2,3),(3,4),(4,5),(5,6),(6,1)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,4)

connections = [(1,2),(2,1),(2,3),(3,2),(3,4),(4,3),(4,1)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,5)

connections = [(1,2),(2,3),(3,4),(4,1),(4,5),(5,1)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np          
import networkx as nx
import matplotlib.pyplot as plt
# %matplotlib inline

myWeb = nx.DiGraph()
myPages = range(1,7)

connections = [(1,7),(2,7),(3,7),(4,7),(5,7),(6,7)]
myWeb.add_nodes_from(myPages)
myWeb.add_edges_from(connections)

pos=nx.spring_layout(myWeb, seed=40)
nx.draw(myWeb, pos, arrows=True, with_labels=True)
plt.show()
G, p = createPageRank(myWeb)
print (G)